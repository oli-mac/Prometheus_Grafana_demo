# version: '3.8'

# services:
#   api:
#     build: .
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       - DATABASE_URL=postgresql://user:password@db/textdb
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=textdb
#     command: ["./wait-for-it.sh", "db", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]

#   db:
#     image: postgres:13
#     environment:
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=textdb
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   loki:
#     image: grafana/loki:2.2.1
#     ports:
#       - "3100:3100"
#     volumes:
#       - /:/etc/loki
#     command: -config.file=/etc/loki/loki-config.yaml
#     networks:
#       - loki

#   prometheus:
#     image: prom/prometheus
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     ports:
#       - "9090:9090"

#   grafana:
#     image: grafana/grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#       # - ./grafana.ini:/etc/grafana/grafana.ini
#     depends_on:
#       - prometheus

#   # node_exporter:
#   #   image: quay.io/prometheus/node-exporter:latest
#   #   container_name: node_exporter
#   #   command:
#   #     - '--path.rootfs=/host'
#   #   network_mode: host
#   #   pid: host
#   #   restart: unless-stopped
#   #   volumes:
#   #     - '/:/host:ro,rslave'
#   # node-exporter:
#   #   privileged: true
#   #   image: prom/node-exporter
#   #   container_name: node-exporter
#   #   restart: always
#   #   ports:
#   #     - "9100:9100"
#   #   volumes:
#   #     - /proc:/host/proc:ro
#   #     - /sys:/host/sys:ro
#   #     - /:/rootfs:ro
#   #   command:
#   #     - "--path.procfs=/host/proc"
#   #     - "--path.sysfs=/host/sys"
#   #     - "--collector.filesystem.ignored-mount-points"
#   #     - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1)($$|/)"

#   cadvisor:
#     image: google/cadvisor:latest
#     container_name: cadvisor
#     restart: unless-stopped
#     # ports:
#     #   - "8080:8080"
#     volumes:
#       - '/:/rootfs:ro'
#       - /var/run:/var/run:ro
#       - /sys:/sys:ro
#       - /var/lib/docker/:/var/lib/docker:ro
#       - /dev/disk/:/dev/disk:ro
#     devices:
#       - /dev/kmsg


# volumes:
#   postgres_data:
#   grafana_data:

# networks:
#   loki:
#     driver: bridge

version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://user:password@db/textdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=textdb
    command: ["./wait-for-it.sh", "db", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      - loki

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=textdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - loki

  loki:
    image: grafana/loki:2.4.0
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - /loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.4.0
    restart: unless-stopped
    volumes:
      - /log:/var/log
      - /promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - loki

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - loki

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      # - ./grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - prometheus
    networks:
      - loki

volumes:
  postgres_data:
  grafana_data:

networks:
  loki:
    driver: bridge
